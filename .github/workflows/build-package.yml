# -----------------------------------------------------------------------------
# Build workflow for portable apps
# Author: Urs Roesch https://github.com/uroesch
# Version: 0.9.0
# -----------------------------------------------------------------------------
name: build-package

on:
  push:
    branches:
    - workflow/*
  pull_request:
    branches:
    - master
    - main

jobs:
  build-package:
    if: endsWith(github.repository, 'Portable')
    timeout-minutes: 15
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        - windows-latest
    env:
      PA_DOWNLOAD: https://sourceforge.net/projects/portableapps/files/PortableApps.com%%20%s/%s/download
      PA_INSTALLER: 3.5.18
      PA_LAUNCHER: 2.2.2

    steps:
    - name: Download and install PortableApps.comInstaller
      if: runner.os == 'Windows'
      shell: bash
      run: |
        name=PortableApps.comInstaller_${PA_INSTALLER}.paf.exe
        installer=~/downloads/${name}
        mkdir -p ~/downloads
        test -f ${installer} ||
        curl --location -o ${installer} \
        $(printf "${PA_DOWNLOAD}" Installer ${name})
        7z x -y -o../PortableApps.comInstaller ${installer}

    - name: Download and install PortableApps.comLauncher
      if: runner.os == 'Windows'
      shell: bash
      run: |
        name=PortableApps.comInstaller_${PA_INSTALLER}.paf.exe
        name=PortableApps.comLauncher_${PA_LAUNCHER}.paf.exe
        installer=~/downloads/${name}
        mkdir -p ~/downloads
        test -f ${installer} ||
        curl --location -o ${installer} \
        $(printf "${PA_DOWNLOAD}" Launcher ${name})
        7z x -y -o../PortableApps.comLauncher ${installer}

    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        lfs: true

    - name: Run build script Update.ps1
      if: runner.os == 'Windows'
      run: pwsh -ExecutionPolicy ByPass -File Other/Update/Update.ps1
      timeout-minutes: 10

    - name: Run build script via docker
      if: runner.os == 'Linux'
      shell: bash
      run: |2+ 
        docker run \
          --rm \
          --tty \
          --env USER_UID=$(id -u) \
          --env USER_GID=$(id -g) \
          --mount type=bind,src=$(cd ../; pwd),target=/PortableApps \
          --workdir=/PortableApps/$(realpath --relative-to=../  .) \
          uroesch/pa-wine:latest \
          /usr/bin/pwsh -ExecutionPolicy ByPass Other/Update/Update.ps1 -InfraDir /pa-build
      timeout-minutes: 10

    - name: Collect logs on failure
      if: failure()
      shell: bash
      run: |
        mkdir ../artifacts
        cp ../PortableApps.com*/Data/*Log.txt ../artifacts

    - name: Upload artifacts on failure
      if: failure()
      uses: actions/upload-artifact@v1.0.0
      with:
        name: logs.zip
        path: ../artifacts
